<?php

namespace DummyNamespace;

use DummyFullModelClass;
use Code16\Sharp\Form\SharpForm;
use Code16\Sharp\Form\Layout\FormLayout;
use Code16\Sharp\Form\Layout\FormLayoutColumn;
use Code16\Sharp\Form\Fields\SharpFormTextField;
use Code16\Sharp\Utils\Fields\FieldsContainer;
use Code16\Sharp\Form\Eloquent\WithSharpFormEloquentUpdater;

class DummyClass extends SharpForm
{
    use WithSharpFormEloquentUpdater;

    public function buildFormFields(FieldsContainer $formFields): void
    {
        $formFields
            ->addField(
                SharpFormTextField::make('my_field')
                    ->setLabel('My field')
            );
    }

    public function buildFormLayout(FormLayout $formLayout): void
    {
        $formLayout
            ->addColumn(6, function (FormLayoutColumn $column) {
                $column
                    ->withSingleField('my_field');
            });
    }

    public function find($id): array
    {
        return $this->transform(
            DummyModelClass::findOrFail($id)
        );
    }

    public function update($id, array $data)
    {
        $DummyModelVariable = $id ? DummyModelClass::findOrFail($id) : new DummyModelClass;
        $this->save($DummyModelVariable, $data);

        return $DummyModelVariable->id;
    }

    public function rules(): array
    {
    	return [
    		'my_field' => 'required',
    	];
    }
}
