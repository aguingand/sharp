<?php

namespace DummyNamespace;

use Code16\Sharp\EntityList\Fields\EntityListFieldsContainer;
use Code16\Sharp\EntityList\Fields\EntityListField;
use Code16\Sharp\EntityList\SharpEntityList;
use Illuminate\Contracts\Support\Arrayable;

class DummyClass extends SharpEntityList
{
    protected function buildList(EntityListFieldsContainer $fields): void
    {
        $fields
            ->addField(
                EntityListField::make('myCol')
                    ->setLabel('My col')
                    ->setWidth(4)
                    ->setWidthOnSmallScreens(6),
            );
    }

    public function buildListConfig(): void
    {
        $this
            ->configureDefaultSort('created_at', 'desc')
            ->configureSearchable()
            ->configurePaginated();
    }

    protected function getInstanceCommands(): ?array
    {
        return [];
    }

    protected function getEntityCommands(): ?array
    {
        return [];
    }

    protected function getFilters(): array
    {
        return [];
    }

    public function getListData(): array|Arrayable
    {
        return $this
            ->setCustomTransformer('created_at', function ($value, DummyModelClass $dummyModel) {
                return $dummyModel->created_at->isoFormat('LLLL');
            })
            ->transform(...)
    }
}
